matrix53 = mmread('SC53.matrix.mtx').T.tocsc()
genes53 = pd.read_csv('SC53.genes.tsv', header=None, sep='\t')
barcodes53 = pd.read_csv('SC53.barcodes.tsv', header=None, sep='\t')
adata53 = sc.AnnData(X=matrix53)
adata53.var['gene_ids'] = genes53[0].values
adata53.var['gene'] = genes53[1].values
adata53.var_names = genes53[1].values
adata53.obs_names = barcodes53[0].values
adata53.var["mt"] = adata53.var.index.str.startswith("MT-")
adata53.var_names_make_unique()


matrix68 = csr_matrix(np.loadtxt('matrix.txt').T)
genes68 = pd.read_csv('genes.txt', header=None, sep='\t')
barcodes68 = pd.read_csv('barcodes.txt', header=None, sep='\t')
adata68 = sc.AnnData(X=matrix68)
adata68.var['gene_ids'] = genes68[0].values
adata68.var['gene'] = genes68[1].values
adata68.var_names = genes68[1].values
adata68.obs_names = barcodes68[0].values
adata68.var["mt"] = adata68.var.index.str.startswith("MT-")
adata68.var_names_make_unique()

################QC

sc.pp.calculate_qc_metrics(
    adata53,
    qc_vars=["mt"],
    percent_top=None,
    inplace=True,
    log1p=False,
)


sc.pp.calculate_qc_metrics(
    adata68,
    qc_vars=["mt"],
    percent_top=None,
    inplace=True,
    log1p=False,
)



#####plot

fig, axes = plt.subplots(ncols=3, figsize=(12, 4))

sns.histplot(adata53.obs.total_counts, log_scale=True, alpha=1, bins=50, edgecolor="black", ax=axes[0])
axes[0].set_ylabel("")
axes[0].set_xlabel("nUMIs")
axes[0].grid(alpha=0.3)

sns.histplot(adata53.obs.n_genes_by_counts, log_scale=True, alpha=1, bins=50, edgecolor="black", ax=axes[1])
axes[1].set_ylabel("")
axes[1].set_xlabel("nGenes")
axes[1].grid(alpha=0.3)

sns.histplot(adata53.obs.pct_counts_mt, alpha=1, edgecolor="black", ax=axes[2])
axes[2].set_ylabel("")
axes[2].set_xlabel("% mt counts")
axes[2].grid(alpha=0.3)

fig.tight_layout()



fig, axes = plt.subplots(ncols=3, figsize=(12, 4))

sns.histplot(adata68.obs.total_counts, log_scale=True, alpha=1, bins=50, edgecolor="black", ax=axes[0])
axes[0].set_ylabel("")
axes[0].set_xlabel("nUMIs")
axes[0].grid(alpha=0.3)

sns.histplot(adata68.obs.n_genes_by_counts, log_scale=True, alpha=1, bins=50, edgecolor="black", ax=axes[1])
axes[1].set_ylabel("")
axes[1].set_xlabel("nGenes")
axes[1].grid(alpha=0.3)

sns.histplot(adata68.obs.pct_counts_mt, alpha=1, edgecolor="black", ax=axes[2])
axes[2].set_ylabel("")
axes[2].set_xlabel("% mt counts")
axes[2].grid(alpha=0.3)

fig.tight_layout()


#########doublets

sc.pp.scrublet(adata53)
sc.pp.scrublet(adata68)


######mt clean

adata53 = adata53[adata53.obs['pct_counts_mt'] < 5, :]
adata68 = adata68[adata68.obs['pct_counts_mt'] < 5, :]


#######filter minimum 


sc.pp.filter_cells(adata53, min_genes=200)
sc.pp.filter_genes(adata53, min_cells=3)
sc.pp.filter_cells(adata68, min_genes=200)
sc.pp.filter_genes(adata68, min_cells=3)


########normalize_log1p


sc.pp.normalize_total(adata53, target_sum=1e4)
sc.pp.log1p(adata53)
sc.pp.normalize_total(adata68, target_sum=1e4)
sc.pp.log1p(adata68)


####highly_variable_only
adata53.raw = adata53
sc.pp.highly_variable_genes(adata53, n_top_genes=3000)
adata53 = adata53[:, adata53.var.highly_variable]


adata68.raw = adata68
sc.pp.highly_variable_genes(adata68, n_top_genes=3000)
adata68 = adata68[:, adata68.var.highly_variable]
